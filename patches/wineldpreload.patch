--- dlls/ntdll/unix/loader.c.orig	2020-12-24 17:29:47.647610603 +0700
+++ dlls/ntdll/unix/loader.c	2020-12-24 17:40:18.877878998 +0700
@@ -107,12 +107,6 @@
 static void fatal_error( const char *err, ... ) __attribute__((noreturn, format(printf,1,2)));
 #endif
 
-#if defined(linux) || defined(__APPLE__)
-static const BOOL use_preloader = TRUE;
-#else
-static const BOOL use_preloader = FALSE;
-#endif
-
 static const BOOL is_win64 = (sizeof(void *) > sizeof(int));
 
 static char *argv0;
@@ -414,64 +408,15 @@
 
 static void preloader_exec( char **argv )
 {
-    if (use_preloader)
-    {
-        static const char *preloader = "wine-preloader";
-        char *p;
-
-        if (!(p = strrchr( argv[1], '/' ))) p = argv[1];
-        else p++;
-
-        if (strlen(p) > 2 && !strcmp( p + strlen(p) - 2, "64" )) preloader = "wine64-preloader";
-        argv[0] = malloc( p - argv[1] + strlen(preloader) + 1 );
-        memcpy( argv[0], argv[1], p - argv[1] );
-        strcpy( argv[0] + (p - argv[1]), preloader );
-
-#ifdef __APPLE__
-        {
-            posix_spawnattr_t attr;
-            posix_spawnattr_init( &attr );
-            posix_spawnattr_setflags( &attr, POSIX_SPAWN_SETEXEC | _POSIX_SPAWN_DISABLE_ASLR );
-            posix_spawn( NULL, argv[0], NULL, &attr, argv, *_NSGetEnviron() );
-            posix_spawnattr_destroy( &attr );
-        }
-#endif
-        execv( argv[0], argv );
-        free( argv[0] );
-    }
-    execv( argv[1], argv + 1 );
+    argv[0] = getenv("WINELDLIBRARY");
+    execv( argv[0], argv );
 }
 
 static NTSTATUS loader_exec( const char *loader, char **argv, client_cpu_t cpu )
 {
-    char *p, *path;
-
-    if (build_dir)
-    {
-        argv[1] = build_path( build_dir, (cpu == CPU_x86_64) ? "loader/wine64" : "loader/wine" );
-        preloader_exec( argv );
-        return STATUS_INVALID_IMAGE_FORMAT;
-    }
-
-    if ((p = strrchr( loader, '/' ))) loader = p + 1;
-
-    argv[1] = build_path( bin_dir, loader );
-    preloader_exec( argv );
-
     argv[1] = getenv( "WINELOADER" );
     if (argv[1]) preloader_exec( argv );
 
-    if ((path = getenv( "PATH" )))
-    {
-        for (p = strtok( strdup( path ), ":" ); p; p = strtok( NULL, ":" ))
-        {
-            argv[1] = build_path( p, loader );
-            preloader_exec( argv );
-        }
-    }
-
-    argv[1] = build_path( BINDIR, loader );
-    preloader_exec( argv );
     return STATUS_INVALID_IMAGE_FORMAT;
 }
 
@@ -536,40 +481,8 @@
  */
 static void exec_wineserver( char **argv )
 {
-    char *path;
-
-    if (build_dir)
-    {
-        if (!is_win64)  /* look for 64-bit server */
-        {
-            char *loader = realpath_dirname( build_path( build_dir, "loader/wine64" ));
-            if (loader)
-            {
-                argv[0] = build_path( loader, "../server/wineserver" );
-                execv( argv[0], argv );
-            }
-        }
-        argv[0] = build_path( build_dir, "server/wineserver" );
-        execv( argv[0], argv );
-        return;
-    }
-
-    argv[0] = build_path( bin_dir, "wineserver" );
-    execv( argv[0], argv );
-
-    argv[0] = getenv( "WINESERVER" );
-    if (argv[0]) execv( argv[0], argv );
-
-    if ((path = getenv( "PATH" )))
-    {
-        for (path = strtok( strdup( path ), ":" ); path; path = strtok( NULL, ":" ))
-        {
-            argv[0] = build_path( path, "wineserver" );
-            execvp( argv[0], argv );
-        }
-    }
-
-    argv[0] = build_path( BINDIR, "wineserver" );
+    argv[0] = getenv( "WINELDLIBRARY" );
+    argv[1] = getenv( "WINESERVER" );
     execv( argv[0], argv );
 }
 
@@ -582,7 +495,7 @@
 void start_server( BOOL debug )
 {
     static BOOL started;  /* we only try once */
-    char *argv[3];
+    char *argv[4];
     static char debug_flag[] = "-d";
 
     if (!started)
@@ -592,8 +505,8 @@
         if (pid == -1) fatal_error( "fork: %s", strerror(errno) );
         if (!pid)
         {
-            argv[1] = debug ? debug_flag : NULL;
-            argv[2] = NULL;
+            argv[2] = debug ? debug_flag : NULL;
+            argv[3] = NULL;
             exec_wineserver( argv );
             fatal_error( "could not exec wineserver\n" );
         }
