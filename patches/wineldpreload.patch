--- libs/wine/config.c.orig	2020-04-19 21:18:40.037195275 +0700
+++ libs/wine/config.c	2020-04-25 09:37:20.346516834 +0700
@@ -514,42 +514,16 @@
 /* exec a binary using the preloader if requested; helper for wine_exec_wine_binary */
 static void preloader_exec( char **argv, int use_preloader )
 {
-    if (use_preloader)
-    {
-        static const char preloader[] = "wine-preloader";
-        static const char preloader64[] = "wine64-preloader";
-        char *p, *full_name;
-        char **last_arg = argv, **new_argv;
+    char * wineloader = getenv("WINELDLIBRARY");
+    char **last_arg = argv, **new_argv;
 
-        if (!(p = strrchr( argv[0], '/' ))) p = argv[0];
-        else p++;
-
-        full_name = xmalloc( p - argv[0] + sizeof(preloader64) );
-        memcpy( full_name, argv[0], p - argv[0] );
-        if (strendswith( p, "64" ))
-            memcpy( full_name + (p - argv[0]), preloader64, sizeof(preloader64) );
-        else
-            memcpy( full_name + (p - argv[0]), preloader, sizeof(preloader) );
-
-        /* make a copy of argv */
-        while (*last_arg) last_arg++;
-        new_argv = xmalloc( (last_arg - argv + 2) * sizeof(*argv) );
-        memcpy( new_argv + 1, argv, (last_arg - argv + 1) * sizeof(*argv) );
-        new_argv[0] = full_name;
-#ifdef __APPLE__
-        {
-            posix_spawnattr_t attr;
-            posix_spawnattr_init( &attr );
-            posix_spawnattr_setflags( &attr, POSIX_SPAWN_SETEXEC | _POSIX_SPAWN_DISABLE_ASLR );
-            posix_spawn( NULL, full_name, NULL, &attr, new_argv, *_NSGetEnviron() );
-            posix_spawnattr_destroy( &attr );
-        }
-#endif
-        execv( full_name, new_argv );
-        free( new_argv );
-        free( full_name );
-    }
-    execv( argv[0], argv );
+    /* make a copy of argv */
+    while (*last_arg) last_arg++;
+    new_argv = xmalloc( (last_arg - argv + 2) * sizeof(*argv) );
+    memcpy( new_argv + 1, argv, (last_arg - argv + 1) * sizeof(*argv) );
+    new_argv[0] = wineloader;
+    execv( wineloader, new_argv );
+    free( new_argv );
 }
 
 /* exec a wine internal binary (either the wine loader or the wine server) */
