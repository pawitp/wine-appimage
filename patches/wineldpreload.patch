--- libs/wine/config.c.orig	2020-05-09 03:18:56.000000000 +0700
+++ libs/wine/config.c	2020-05-09 13:41:26.300187762 +0700
@@ -525,42 +525,16 @@
 /* exec a binary using the preloader if requested; helper for wine_exec_wine_binary */
 static void preloader_exec( char **argv, int use_preloader )
 {
-    if (use_preloader)
-    {
-        static const char preloader[] = "wine-preloader";
-        static const char preloader64[] = "wine64-preloader";
-        char *p, *full_name;
-        char **last_arg = argv, **new_argv;
+    char * wineloader = getenv("WINELDLIBRARY");
+    char **last_arg = argv, **new_argv;
 
-        if (!(p = strrchr( argv[0], '/' ))) p = argv[0];
-        else p++;
-
-        full_name = xmalloc( p - argv[0] + sizeof(preloader64) );
-        memcpy( full_name, argv[0], p - argv[0] );
-        if (strendswith( p, "64" ))
-            memcpy( full_name + (p - argv[0]), preloader64, sizeof(preloader64) );
-        else
-            memcpy( full_name + (p - argv[0]), preloader, sizeof(preloader) );
-
-        /* make a copy of argv */
-        while (*last_arg) last_arg++;
-        new_argv = xmalloc( (last_arg - argv + 2) * sizeof(*argv) );
-        memcpy( new_argv + 1, argv, (last_arg - argv + 1) * sizeof(*argv) );
-        new_argv[0] = full_name;
-#ifdef __APPLE__
-        {
-            posix_spawnattr_t attr;
-            posix_spawnattr_init( &attr );
-            posix_spawnattr_setflags( &attr, POSIX_SPAWN_SETEXEC | _POSIX_SPAWN_DISABLE_ASLR );
-            posix_spawn( NULL, full_name, NULL, &attr, new_argv, *_NSGetEnviron() );
-            posix_spawnattr_destroy( &attr );
-        }
-#endif
-        execv( full_name, new_argv );
-        free( new_argv );
-        free( full_name );
-    }
-    execv( argv[0], argv );
+    /* make a copy of argv */
+    while (*last_arg) last_arg++;
+    new_argv = xmalloc( (last_arg - argv + 2) * sizeof(*argv) );
+    memcpy( new_argv + 1, argv, (last_arg - argv + 1) * sizeof(*argv) );
+    new_argv[0] = wineloader;
+    execv( wineloader, new_argv );
+    free( new_argv );
 }
 
 /* exec a wine internal binary (either the wine loader or the wine server) */
--- dlls/ntdll/unix/loader.c.orig	2020-05-23 01:49:34.000000000 +0700
+++ dlls/ntdll/unix/loader.c	2020-05-23 10:11:56.780295166 +0700
@@ -92,12 +92,6 @@
 extern char **__wine_main_argv;
 extern char **__wine_main_environ;
 
-#if defined(linux) || defined(__APPLE__)
-static const BOOL use_preloader = TRUE;
-#else
-static const BOOL use_preloader = FALSE;
-#endif
-
 static const BOOL is_win64 = (sizeof(void *) > sizeof(int));
 
 static int main_argc;
@@ -523,64 +517,17 @@
 
 static void preloader_exec( char **argv )
 {
-    if (use_preloader)
-    {
-        static const char *preloader = "wine-preloader";
-        char *p;
-
-        if (!(p = strrchr( argv[1], '/' ))) p = argv[1];
-        else p++;
-
-        if (strlen(p) > 2 && !strcmp( p + strlen(p) - 2, "64" )) preloader = "wine64-preloader";
-        argv[0] = malloc( p - argv[1] + strlen(preloader) + 1 );
-        memcpy( argv[0], argv[1], p - argv[1] );
-        strcpy( argv[0] + (p - argv[1]), preloader );
-
-#ifdef __APPLE__
-        {
-            posix_spawnattr_t attr;
-            posix_spawnattr_init( &attr );
-            posix_spawnattr_setflags( &attr, POSIX_SPAWN_SETEXEC | _POSIX_SPAWN_DISABLE_ASLR );
-            posix_spawn( NULL, argv[0], NULL, &attr, argv, *_NSGetEnviron() );
-            posix_spawnattr_destroy( &attr );
-        }
-#endif
-        execv( argv[0], argv );
-        free( argv[0] );
-    }
-    execv( argv[1], argv + 1 );
+    argv[0] = getenv("WINELDLIBRARY");
+    execv( argv[0], argv );
+    free( argv[0] );
 }
 
 static NTSTATUS loader_exec( const char *loader, char **argv, int is_child_64bit )
 {
     char *p, *path;
 
-    if (build_dir)
-    {
-        argv[1] = build_path( build_dir, is_child_64bit ? "loader/wine64" : "loader/wine" );
-        preloader_exec( argv );
-        return STATUS_INVALID_IMAGE_FORMAT;
-    }
-
-    if ((p = strrchr( loader, '/' ))) loader = p + 1;
-
-    argv[1] = build_path( bin_dir, loader );
-    preloader_exec( argv );
-
     argv[1] = getenv( "WINELOADER" );
     if (argv[1]) preloader_exec( argv );
-
-    if ((path = getenv( "PATH" )))
-    {
-        for (p = strtok( strdup( path ), ":" ); p; p = strtok( NULL, ":" ))
-        {
-            argv[1] = build_path( p, loader );
-            preloader_exec( argv );
-        }
-    }
-
-    argv[1] = build_path( BINDIR, loader );
-    preloader_exec( argv );
     return STATUS_INVALID_IMAGE_FORMAT;
 }
 
@@ -644,39 +591,8 @@
 static void exec_wineserver( char **argv )
 {
     char *path;
-
-    if (build_dir)
-    {
-        if (!is_win64)  /* look for 64-bit server */
-        {
-            char *loader = realpath_dirname( build_path( build_dir, "loader/wine64" ));
-            if (loader)
-            {
-                argv[0] = build_path( loader, "../server/wineserver" );
-                execv( argv[0], argv );
-            }
-        }
-        argv[0] = build_path( build_dir, "server/wineserver" );
-        execv( argv[0], argv );
-        return;
-    }
-
-    argv[0] = build_path( bin_dir, "wineserver" );
-    execv( argv[0], argv );
-
-    argv[0] = getenv( "WINESERVER" );
-    if (argv[0]) execv( argv[0], argv );
-
-    if ((path = getenv( "PATH" )))
-    {
-        for (path = strtok( strdup( path ), ":" ); path; path = strtok( NULL, ":" ))
-        {
-            argv[0] = build_path( path, "wineserver" );
-            execvp( argv[0], argv );
-        }
-    }
-
-    argv[0] = build_path( BINDIR, "wineserver" );
+    argv[0] = getenv( "WINELDLIBRARY" );
+    argv[1] = getenv( "WINESERVER" );
     execv( argv[0], argv );
 }
 
@@ -689,7 +605,7 @@
 static void CDECL start_server( BOOL debug )
 {
     static BOOL started;  /* we only try once */
-    char *argv[3];
+    char *argv[4];
     static char debug_flag[] = "-d";
 
     if (!started)
@@ -699,8 +615,8 @@
         if (pid == -1) fatal_error( "fork: %s", strerror(errno) );
         if (!pid)
         {
-            argv[1] = debug ? debug_flag : NULL;
-            argv[2] = NULL;
+            argv[2] = debug ? debug_flag : NULL;
+            argv[3] = NULL;
             exec_wineserver( argv );
             fatal_error( "could not exec wineserver\n" );
         }
